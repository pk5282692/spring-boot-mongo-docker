node{
     
    stage('SCM Checkout'){
        git 'https://github.com/pk5282692/spring-boot-mongo-docker.git'
    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.6.1", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
      
    } 

    stage("Sonar Report"){
      sh "mvn sonar:sonar"
    }
    
    stage("Nexus upload"){
      sh "nexusArtifactUploader artifacts: [[artifactId: 'spring-boot-starter-parent', classifier: '', file: '*.jar', type: 'jar']], credentialsId: 'Nexuscred', groupId: 'org.springframework.boot', nexusUrl: '13.233.108.172:8081', nexusVersion: 'nexus2', protocol: 'http', repository: 'sample-releases', version: '2.1.5.RELEASE'"
    }
    /*
    stage('Build Docker Image'){
        sh 'docker build -t pk5282692/spring-boot-mongo .'
    }
    
    stage('Push Docker Image'){
        withCredentials([string(credentialsId: 'DOKCER_HUB_PASSWORD', variable: 'DOKCER_HUB_PASSWORD')]) {
          sh "docker login -u pk5282692 -p ${DOKCER_HUB_PASSWORD}"
        }
        sh 'docker push pk5282692/spring-boot-mongo'
     }
     
     stage("Deploy To Kuberates Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CONFIG',
         enableConfigSubstitution: true
        )
     }
	 
	  
      stage("Deploy To Kuberates Cluster"){
        sh 'kubectl apply -f springBootMongo.yml'
      } 
      */
  
}


